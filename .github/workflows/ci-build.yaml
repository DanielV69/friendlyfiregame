name: Build Game
on:
  push:
    branches:
    - '**'
    - '!gh-pages'
    tags:
    - 'v*.*.*'
  pull_request:
    branches:
    - main
    types:
    - opened
    - synchronize
    - reopened

env:
  NODE_ENV: development

jobs:

  build_webapp:
    name: Build Webapp
    runs-on: ubuntu-22.04
    env:
      DISPLAY: ':99.0'
    steps:
    - name: git checkout
      uses: actions/checkout@v3
    - uses: jwalton/gh-find-current-pr@v1
      id: pr
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
    - name: Extract branch name
      if: github.event_name != 'pull_request'
      shell: bash
      run: echo "GIT_BRANCH_NAME=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> "${GITHUB_ENV}"
      id: extract_branch
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        architecture: x64
        node-version: '18'
    - name: Cache node modules
      uses: actions/cache@v3
      env:
        cache-name: cache-node-modules
      with:
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Install NPM dependencies
      run: npm install
    - name: Check spelling
      run: npm run -s cspell
    - name: Run linters
      id: run_linters
      shell: bash
      run: npm run -s lint
    - name: Compile sources
      run: npm run -s compile
    - name: Install XFFB (required for headless tests)
      run:
        # See: https://codito.in/xvfb-in-github-action/
        sudo apt install -y xvfb x11-utils libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xfixes0 xdotool
    - name: Run headless tests
      run: xvfb-run --auto-servernum npm run -s coverage
    - run: npm run -s dist
    - name: Archive dist folder
      uses: actions/upload-artifact@v3
      with:
        name: webapp-dist
        path: dist

  deploy_webapp:
    name: Deploy Webapp
    needs: build_webapp
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-22.04
    steps:
    - name: Download archived dist folder
      uses: actions/download-artifact@v3
      with:
        name: webapp-dist
        path: dist

    - name: Publish browser game
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_branch: gh-pages
        publish_dir: ./dist
        force_orphan: true
        cname: play.friendlyfiregame.com

  build_electron_app:
    needs: build_webapp
    name: Build Electron Apps
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
        - ubuntu-22.04
        - macos-12
        - windows-2022
    steps:
    - name: Retrieve Operating System Information from Builder
      id: build_info
      shell: bash
      env:
        RUNNER_OS: ${{runner.os}}
      run: |
        runner_os_lower=`echo "${RUNNER_OS}" | tr '[:upper:]' '[:lower:]'`
        echo "os=${runner_os_lower}" >> $GITHUB_OUTPUT
        echo "arch=x64" >> $GITHUB_OUTPUT
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Read version from package.json
      id: version
      uses: actions/github-script@v6
      with:
        script: return require("./package.json").version
        result-encoding: string
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        architecture: '${{steps.build_info.output.arch}}'
        node-version: '18'
    - name: Cache node modules
      uses: actions/cache@v3
      env:
        cache-name: cache-node-modules
      with:
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - run: npm install
    - name: Create Electron game package
      env:
        NODE_ENV: production
      run: npm run -s package
    - name: Archive Electron game package
      uses: actions/upload-artifact@v3
      with:
        name: friendlyfiregame-v${{steps.version.outputs.result}}-${{steps.build_info.outputs.os}}-${{steps.build_info.outputs.arch}}.zip
        path: out
